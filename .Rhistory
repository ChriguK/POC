library(rattle)
rattle()
library(ROCR)
help(performance)
example(performance)
rattle()
q()
?install.packages
?install.packages('dismo',dep=c('Depends','Suggests'))
install.packages('dismo',dep=c('Depends','Suggests'))
warnings()
q()
install.packages('rgdal',dep=c('Depends','Suggests'))
q()
install.packages('ff',dep=c('Depends','Suggests'))
help.start()
q()
install.packages('laf',dep=c('Depends','Suggests'))
install.packages('LaF',dep=c('Depends','Suggests'))
q()
install.packages('ffbase',dep=c('Depends','Suggests'))
q()
help.start()
q()
install.packages('devtools',dep=c('Depends','Suggests'))
install.packages('devtools',dep=c('Depends','Suggests'))
install.packages('RCurl',dep=c('Depends','Suggests'))
install.packages('devtools',dep=c('Depends','Suggests'))
install.packages('brew',dep=c('Depends','Suggests'))
install.packages('devtools',dep=c('Depends','Suggests'))
install.packages('formatR',dep=c('Depends','Suggests'))
install.packages('markdown',dep=c('Depends','Suggests'))
install.packages('devtools',dep=c('Depends','Suggests'))
install.packages('BiocInstaller',dep=c('Depends','Suggests'))
install.packages('httr',dep=c('Depends','Suggests'))
install.packages('whisker',dep=c('Depends','Suggests'))
install.packages('devtools',dep=c('Depends','Suggests'))
q()
require(devtools)
install_github('rCharts', 'ramnathv')
q()
download.file("http://www.lepem.ufc.br/jaa/colorout_1.0-1.tar.gz", destfile = "colorout_1.0-1.tar.gz")
install.packages("colorout_1.0-1.tar.gz", type = "source", repos = NULL)
install.packages('setwidth',dep=c('Depends','Suggests'))
q()
test <- "Alkohol/-test"
grep("*\\-",test)
grep("*-",test)
test
test <- "Alkohol/-test"
test
rm(list=ls())
library(stringr)
test <- "Alkohol/-test"
test
test <- "Alkoholtest"
test
test <- c("Alkoholtest")
test
?grep
grep("[a-z]", letters)
txt <- c("arm","foot","lefroo", "bafoobar")
txt
rm(list=ls())
library(tm)
library(chron)
library(stringr)
strip.legend <- function(x) {
if (any(grepl("Legende",x))) return(x[-c(grep("Legende",x):length(x))])
else return(x)
}
load("~/ADMAS/Profiling/ADMAS.RData")
getwd()
load("~/ASTRA/ADMAS/Profiling/ADMAS.RData")
Encoding(dat) <- 'latin1'
dat.stripped <- str_trim(dat)
dat.stripped <- stripWhitespace(dat.stripped)
no.empty.lines <- length(dat.stripped[which(dat.stripped=="")])
dat <- dat[which(dat.stripped!="")]
dat.stripped <- dat.stripped[which(dat.stripped!="")]
updates <- str_extract_all(dat.stripped,"[0-3][1-9]\\.[0-1][0-9]\\.[1-2][0,9][9,0,1][0-9]")
updates <- unlist(updates)
updates <- as.Date(updates, format="%d.%m.%Y")
header <- grepl("Schweizerische Eidgenossenschaft Eidgenössisches Departement für|Confédération suisse Umwelt, Verkehr, Energie und Kommunikation UVEK|Confederazione Svizzera|Confederaziun svizra Bundesamt für Strassen ASTRA",dat.stripped)
footer <- grepl("ASTRA DWH ADMAS Gesamtbericht|Version|Aktualisiert|am:|[0-2][0-4]:[0-6][0-9]:[0-6][0-9]|^\\/[0-9]$|^[0-9]$",dat.stripped)
is.header.footer <- apply(cbind(header,footer),1,any)
no.lines <- rle(is.header.footer)$lengths[rle(is.header.footer)$values==F]
dat <- dat[!is.header.footer]
dat <- gsub("'", "", dat)
rm(header, footer, is.header.footer, dat.stripped)
pages <- vector("list", length(no.lines))
names(pages)[1] <- "Inhaltsverzeichnis"
for (i in 1:length(no.lines)) {
pages[[i]] <- dat[1:no.lines[i]]
dat <- dat[-c(1:no.lines[i])]
}; rm(dat)
for (i in 2:length(no.lines)) {
title.pos <- grepl("ADMAS 0[0-9]{2}",pages[[i]])
names(pages)[i] <- str_extract(pages[[i]][title.pos],"ADMAS 0[0-9]{2} Seite [0-9]")
pages[[i]] <- pages[[i]][!title.pos]
}; rm(i, title.pos, no.lines)
pages.stripped <- lapply(pages[-1], strip.legend)
pages.stripped <- lapply(pages.stripped, function(x) {x <- x[!grepl("^[0-9, ]+$",x)]
x <- x[!grepl("Total[[:space:]]{3,}- [0-9]+",x)]
x <- x[!grepl("Grund:|Alter:|>",x)]
x[grepl("[0-9]",x)]})
for (i in names(pages.stripped)) {
if (i=="ADMAS 003 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 006 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 008 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 013 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 014 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 016 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
}
pages.stripped <- lapply(pages.stripped, function(x) gsub("^[0-9]+[[:space:]]+([A-Z,Ä,Ö,Ü]+)","\\1",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("^[[:space:]]+[0-9]+[[:space:]]+([A-Z,Ä,Ö,Ü]+)","\\1",x))
name.list <- vector("list", length(pages.stripped))
names(name.list) <- names(pages.stripped)
for (i in names(pages.stripped)) {
name.list[[i]] <- str_extract(pages.stripped[[i]], "^[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü,\\.,:,\\(,\\),\\,,/, ]+|^[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü]+/-[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü]+|^- [0-9]{2}|^[0-9]{2} -|^[0-9]{2} - [0-9]{2}")
}
name.list <- lapply(name.list,str_trim)
name.list <- lapply(name.list,stripWhitespace)
name.list <- lapply(name.list,function(x) gsub("- | -| - ","-",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("^- [0-9]{2}|^[0-9]{2} -|^[0-9]{2} - [0-9]{2}","",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü,\\.,:,\\(,\\),\\,,/,-]"," ",x))
data.only <- lapply(pages.stripped, function(x) {max.length <- max(nchar(x)); sprintf(paste("%-", max.length,"s", sep=""), x)})
# for (i in grep("001", names(data.only))) data.only[[i]][length(data.only[[i]])] <- paste("      ",data.only[[i]][length(data.only[[i]])], sep="")
# for (i in grep("002", names(data.only))) data.only[[i]][length(data.only[[i]])] <- paste("    ",data.only[[i]][length(data.only[[i]])], sep="")
for (i in names(data.only)) write(data.only[[i]], paste(i,"txt",sep="."), ncolumns=1)
library(tm)
library(tm)
strip.legend <- function(x) {
if (any(grepl("Legende",x))) return(x[-c(grep("Legende",x):length(x))])
else return(x)
}
load("~/ASTRA/ADMAS/Profiling/ADMAS.RData")
Encoding(dat) <- 'latin1'
dat.stripped <- str_trim(dat)
dat.stripped <- stripWhitespace(dat.stripped)
no.empty.lines <- length(dat.stripped[which(dat.stripped=="")])
dat <- dat[which(dat.stripped!="")]
dat.stripped <- dat.stripped[which(dat.stripped!="")]
updates <- str_extract_all(dat.stripped,"[0-3][1-9]\\.[0-1][0-9]\\.[1-2][0,9][9,0,1][0-9]")
updates <- unlist(updates)
updates <- as.Date(updates, format="%d.%m.%Y")
header <- grepl("Schweizerische Eidgenossenschaft Eidgenössisches Departement für|Confédération suisse Umwelt, Verkehr, Energie und Kommunikation UVEK|Confederazione Svizzera|Confederaziun svizra Bundesamt für Strassen ASTRA",dat.stripped)
footer <- grepl("ASTRA DWH ADMAS Gesamtbericht|Version|Aktualisiert|am:|[0-2][0-4]:[0-6][0-9]:[0-6][0-9]|^\\/[0-9]$|^[0-9]$",dat.stripped)
is.header.footer <- apply(cbind(header,footer),1,any)
no.lines <- rle(is.header.footer)$lengths[rle(is.header.footer)$values==F]
dat <- dat[!is.header.footer]
dat <- gsub("'", "", dat)
rm(header, footer, is.header.footer, dat.stripped)
pages <- vector("list", length(no.lines))
names(pages)[1] <- "Inhaltsverzeichnis"
for (i in 1:length(no.lines)) {
pages[[i]] <- dat[1:no.lines[i]]
dat <- dat[-c(1:no.lines[i])]
}; rm(dat)
for (i in 2:length(no.lines)) {
title.pos <- grepl("ADMAS 0[0-9]{2}",pages[[i]])
names(pages)[i] <- str_extract(pages[[i]][title.pos],"ADMAS 0[0-9]{2} Seite [0-9]")
pages[[i]] <- pages[[i]][!title.pos]
}; rm(i, title.pos, no.lines)
pages.stripped <- lapply(pages[-1], strip.legend)
pages.stripped <- lapply(pages.stripped, function(x) {x <- x[!grepl("^[0-9, ]+$",x)]
x <- x[!grepl("Total[[:space:]]{3,}- [0-9]+",x)]
x <- x[!grepl("Grund:|Alter:|>",x)]
x[grepl("[0-9]",x)]})
for (i in names(pages.stripped)) {
if (i=="ADMAS 003 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 006 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 008 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 013 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 014 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
if (i=="ADMAS 016 Seite 1") pages.stripped[[i]] <- pages.stripped[[i]][-1]
}
pages.stripped <- lapply(pages.stripped, function(x) gsub("^[0-9]+[[:space:]]+([A-Z,Ä,Ö,Ü]+)","\\1",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("^[[:space:]]+[0-9]+[[:space:]]+([A-Z,Ä,Ö,Ü]+)","\\1",x))
name.list <- vector("list", length(pages.stripped))
names(name.list) <- names(pages.stripped)
for (i in names(pages.stripped)) {
name.list[[i]] <- str_extract(pages.stripped[[i]], "^[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü,\\.,:,\\(,\\),\\,,/, ]+|^[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü]+/-[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü]+|^- [0-9]{2}|^[0-9]{2} -|^[0-9]{2} - [0-9]{2}")
}
name.list <- lapply(name.list,str_trim)
name.list <- lapply(name.list,stripWhitespace)
name.list <- lapply(name.list,function(x) gsub("- | -| - ","-",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("^- [0-9]{2}|^[0-9]{2} -|^[0-9]{2} - [0-9]{2}","",x))
pages.stripped <- lapply(pages.stripped, function(x) gsub("[a-z,ä,ö,ü,A-Z,Ä,Ö,Ü,\\.,:,\\(,\\),\\,,/,-]"," ",x))
data.only <- lapply(pages.stripped, function(x) {max.length <- max(nchar(x)); sprintf(paste("%-", max.length,"s", sep=""), x)})
# for (i in grep("001", names(data.only))) data.only[[i]][length(data.only[[i]])] <- paste("      ",data.only[[i]][length(data.only[[i]])], sep="")
# for (i in grep("002", names(data.only))) data.only[[i]][length(data.only[[i]])] <- paste("    ",data.only[[i]][length(data.only[[i]])], sep="")
cb <- lapply(data.only, function(x) gregexpr("[0-9]+",x))
cb <- lapply(cb, function(x) lapply(x, function(y) {midpoint <- c(0,y+attributes(y)$match.length/2); line.width <- c(diff(midpoint)/2,NA); round(midpoint+line.width)}))
library(plyr)
cb.df <- lapply(cb, function(x) lapply(x, function(y) as.data.frame(t(y))))
cb <- lapply(cb.df, function(x) do.call(rbind.fill, x))
cb <- lapply(cb, function(x) as.matrix(x))
cb <- lapply(cb, sort)
cb
require(devtools)
install_github('rCharts', 'ramnathv')
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
q()
?install.packages
install.packages('track',dep=c('Depends','Suggests'))
help.start()
q()
install.packages('googleVis',dep=c('Depends','Suggests'))
install.packages('httpuv',dep=c('Depends','Suggests'))
q()
install.packages('snowfall',dep=c('Depends','Suggests'))
install.packages('snowfall',dep=c('Depends'))
library(snowfall
)
?sfExport
q()
file <- help("reshape")
pkgname <- basename(dirname(dirname(file)))
temp <- tools::Rd2txt(utils:::.getHelpFile(file), out = tempfile("Rtxt"),
package = pkgname)
file.copy(temp,"~/test.txt")
q()
temp <- tools::Rd2html(utils:::.getHelpFile(file), out = tempfile("Rtxt"), package = pkgname)
temp <- tools::R2HTML(utils:::.getHelpFile(file), out = tempfile("Rtxt"), package = pkgname)
?Rd2txt
library(tools)
?R2HTML
?Rd2HTML
file <- help("reshape")
pkgname <- basename(dirname(dirname(file)))
temp <- tools::R2HTML(utils:::.getHelpFile(file), out = tempfile("Rtxt"), package = pkgname)
temp <- R2HTML(utils:::.getHelpFile(file), out = tempfile("Rtxt"), package = pkgname)
temp <- tools::Rd2HTML(utils:::.getHelpFile(file), out = tempfile("Rtxt"), package = pkgname)
file.copy(temp,"~/test.txt")
file.copy(temp,"~/test.html")
Rd2HTML
?Rd2HTML
?help.start
help.start()
q()
library(slidify)
library(devtools)
pkgs <- c("slidify", "slidifyLibraries", "rCharts")
install_github(pkgs, 'ramnathv', ref = 'dev')
q()
tmp
demo()
demo(scoping)
q()
detach("package:colorout")
demo()
demo(scoping)
RStudioP <- function() nzchar(Sys.getenv("RSTUDIO_USER_IDENTITY"))
RStudioP
RStudioP()
exit()
q()
install.packages('xlsx',dep=c('Depends'))
q()
pkgs <- c("slidify", "slidifyLibraries", "rCharts")
remove.packages((pkgs)
)
library(devtools)
install_github(pkgs, 'ramnathv', ref = 'dev')
q()
getwd()
setwd("./ASTRA/ADMAS/Visualisierung/Slidify/POC_ADMAS/")
library(slidify)
pagify("index.Rmd")
?publish
publish(repo="POC", username="ChriguK")
publish(repo="POC", username="ChriguK")
